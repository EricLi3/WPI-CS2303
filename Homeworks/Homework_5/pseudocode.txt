Main function: 
Include the necessary libraries, stdio, stlib, string and the matrix_math.h

Make the main function able to take in command line argunments using the argc and argv

add line to handle the case were an incorrect number of inputs are entered. 

If the nuber of inputs is not 4 it's wrong.

Make pointers to the input files calling the readMatrix on the heap

Make a pointer for the result. 

Using if statements, and comparing the strings entered at argv[3], we can see if it is either
a or s. if it's a, then we will add the two matrices, if it's s the we will subract the two matrices. 

Else, we will print that an invalid type of operation has been entered. 

If the result is null then we print that the math cannot be performed. 

Finally we print the resulting matrix out using a for loop over all elements of the array/matrix. 

Then we free the memory on the heap since we don't need it anymore. 

Calculations:

ReadMatrix reads in an input file and allocates the array in the matrix struct. We open the file to read it 
and get the size of the matrix. Then we allocate memory in the heap for the Matrix struct, and then we allocate meory for the data
of the matrix. 

We then read in data from the file and store it in the data location allocated in the heap. 

We close the fuile and the return a pointer to this location in memory. 


deleteMatrix reads in a matrix struct and deletes the matrix. We first free the memory allocated for the data, and then delete the 
memory allocated for the matrix struct. we return 0 at the end to indicate success. 

addition takes in two input matrices, A and B, It expects them to have the same size (i.e., the same number of elements), 
so it can perform element-wise addition of the two matrices. we first check if the matrices have the same size only then
can we do the calculations. We allcate memory for the result and for the data of the result, then loop thorugh the data elements 
adding as we go and store the result in the data matrix. We then return a pointer to the result. 

subtraction takes in two input matrices, A and B, It expects them to have the same size (i.e., the same number of elements), 
so it can perform element-wise subtraction of the two matrices. we first check if the matrices have the same size only then
can we do the calculations. We allcate memory for the result and for the data of the result, then loop thorough the data elements 
subtracting as we go and store the result in the data matrix. We then return a pointer to the result. 